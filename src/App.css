.app {
  text-align: justify;
  color: rgb(0, 0, 0);
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  position: relative;
}
.app * {
  box-sizing: border-box;
}

.header {
  padding: 10px;
  font-size: large;
  font-weight: 700;
  color: var(--text-colour-primary);
  background-color: var(--back-colour-primary-2);
  border-bottom-style: solid;
  border-bottom-width: 2px;
  border-bottom-color: var(--border-colour);
}

.light {
  --border-colour: rgb(145, 135, 140);
  --text-colour-primary: rgb(45, 35, 40);
  --text-colour-secondary: rgb(255, 255, 255);
  --back-colour-primary-1: rgb(255, 245, 250);
  --back-colour-primary-2: rgb(250, 240, 245);
  --back-colour-primary-3: rgb(245, 235, 240);
  --back-colour-secondary: rgb(170, 0, 100);
  --success: rgb(100, 170, 0);
  --failure: rgb(0, 100, 170);
  --target: rgb(170, 0, 100);
  --success-light: rgb(200, 255, 100);
  --failure-light: rgb(100, 200, 255);
  --target-light: rgb(255, 120, 220);
}

.dark {
  --border-colour: rgb(130, 130, 150);
  --text-colour-primary: rgb(200, 200, 220);
  --text-colour-secondary: rgb(0, 0, 0);
  --back-colour-primary-1: rgb(0, 0, 10);
  --back-colour-primary-2: rgb(20, 20, 30);
  --back-colour-primary-3: rgb(40, 40, 50);
  --back-colour-secondary: rgb(20, 220, 220);
  --success: rgb(255, 20, 255);
  --failure: rgb(255, 255, 20);
  --target: rgb(20, 255, 255);
  --success-light: rgb(155, 20, 155);
  --failure-light: rgb(100, 100, 20);
  --target-light: rgb(20, 100, 100);
}

.darkContrast {
  --border-colour: rgb(255, 255, 255);
  --text-colour-primary: rgb(255, 255, 255);
  --text-colour-secondary: rgb(0, 0, 0);
  --back-colour-primary-1: rgb(0, 0, 0);
  --back-colour-primary-2: rgb(0, 0, 0);
  --back-colour-primary-3: rgb(255, 255, 255);
  --back-colour-secondary: rgb(255, 255, 255);
  --success: rgb(0, 255, 0);
  --failure: rgb(255, 0, 255);
  --target: rgb(255, 255, 255);
  --success-light: rgb(0, 120, 0);
  --failure-light: rgb(120, 0, 120);
  --target-light: rgb(120, 120, 120);
}

.lightContrast {
  --border-colour: rgb(0, 0, 0);
  --text-colour-primary: rgb(0, 0, 0);
  --text-colour-secondary: rgb(255, 255, 255);
  --back-colour-primary-1: rgb(255, 255, 255);
  --back-colour-primary-2: rgb(255, 255, 255);
  --back-colour-primary-3: rgb(0, 0, 0);
  --back-colour-secondary: rgb(0, 0, 0);
  --success: rgb(0, 255, 0);
  --failure: rgb(255, 0, 255);
  --target: rgb(0, 0, 0);
  --success-light: rgb(120, 255, 120);
  --failure-light: rgb(255, 120, 255);
  --target-light: rgb(120, 120, 120);
}



.simWrapper {
  display: flex;
  flex-direction: row;
  position: absolute;
  left: 0;
  bottom: 0;
  height: 150px;
  width: 100vw;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  background-color: var(--back-colour-primary-2)
}

.simState {
  display: flex;
  flex-flow: column;
  background-color: var(--target-light);
  border-style: solid;
  border-color: var(--border-colour);
  border-width: 1px;
  border-radius: 20px;
  margin: 10px;
  color: var(--text-colour-primary);
  width: 170px;
  padding: 10px;
}

.simStateWrapper {
  overflow: auto;
  flex: 1;
  display: flex;
  flex-flow: row;
  flex-wrap: wrap;
}

.inputsWrapper {
  display: flex;
  flex-direction: column;
  overflow: auto;
}

.simSetUpWrapper {
  width: 200px;
}

.simButtonsWrapper {
  width: 40px;
  display: flex;
  flex-direction: column;
}

#gui {
  position: absolute;
  width: 100vw;
  height: calc(100vh - 150px);
  transform-origin: center;
}

.gui {
  background-color: var(--back-colour-primary-1);
}

.guiState {
  user-select: none;
  transform-origin: center;
}

.xAxis, .yAxis {
  transform-origin: center;
  fill: var(--back-colour-primary-3);
}

/* .gui rect {
  fill: var(--back-colour-primary-3);
} */

.connection path, .tempConnection {
  stroke: var(--back-colour-secondary);
  fill: none
}

.initial {
  stroke: var(--back-colour-secondary);
  fill: var(--back-colour-secondary);
}

.arrow {
  fill: var(--back-colour-secondary);
}

.stateCircle {
  stroke: var(--back-colour-secondary);
}

.activeText {
  fill: var(--text-colour-secondary)
}

.nonactiveText {
  fill: var(--text-colour-primary)
}

.guiState .alternating {
  stroke: var(--back-colour-secondary);
  fill: none;
}

.guiState .pulse {
  stroke: var(--back-colour-secondary);
  fill: none;
}

#solid feFlood {
  flood-color: var(--back-colour-primary-2);
}

#active feFlood {
  flood-color: var(--back-colour-secondary);
}

.simButton {
  margin: 0;
  width: 100%;
  height: 100%;
  font-size: 20px;
  font-weight: 600;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  background-color: transparent;
  color: var(--text-colour-primary);
}

#guiButtonsWrapper {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

.guiButton {
  margin: 10px;
  width: 30px;
  height: 30px;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  background-color: var(--back-colour-primary-1);
  color: var(--text-colour-primary);
}

.target {
  fill: var(--target);
}

.nontarget {
  fill: var(--back-colour-primary-2);
}

.clicked {

  background-color: var(--text-colour-primary);
}

.txtInternalWrapper, #optionsInternalWrapper {

  display: flex;
  flex-direction: column;
}

.optionsAnimWrapper {
  width: 300px;
  background-color: var(--back-colour-primary-1);
}

.contextMenu {
  position: absolute;
  left: 0px;
  top: 0px;
  width: 150px;
  border: solid 1px var(--border-colour);
  background-color: var(--back-colour-primary-2);
}

.reveal {
  transform-origin: 0% 0%;
  animation: revealAnimation ease;
  animation-duration: 0.3s;
}

.contextMenuButton {
  padding: 5px;
  width: 100%;
  color: var(--text-colour-primary);
  border: none;
  text-align: left;
  font-size: 15px;
  background-color: var(--back-colour-primary-2);
}

.contextMenuLabel {
  padding: 5px 5px 2px;
  text-align: left;
  font-size: 15px;
  width: 100%;
  color: var(--text-colour-primary);
  border: none;
  text-align: left;
  display: flex;
  flex-direction: row;
}

.contextMenuInput {
  position: absolute;
  left: 50%;
  width: calc(50% - 15px);
  border: none;
  background-color: var(--back-colour-primary-1);
  color: var(--text-colour-primary);
}

.contextMenuCheckBox {
  position: absolute;
  left: 80%;
  background-color: var(--back-colour-primary-1);
}

.contextMenuSelect {
  position: absolute;
  left: 65%;
  border: none;
  background-color: var(--back-colour-primary-1);
  color: var(--text-colour-primary);
}

@keyframes revealAnimation {
  0% {
    transform: scaleY(0%)
  }

  100% {
    transform: scaleY(100%)
  }
}

#txtWrapper {
  position: absolute;
  display: flex;
  flex-direction: row;
  height: calc(100vh - 150px);
}

#optionsWrapper {
  position: absolute;
  display: flex;
  flex-direction: row;
  height: calc(100vh - 150px);
  right: 0;
}

.collapse {
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  color: var(--text-colour-primary);
  background-color: var(--back-colour-primary-2);
  box-sizing: border-box;
}

#collapse {
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  color: var(--text-colour-primary);
  background-color: var(--back-colour-primary-2);
  box-sizing: border-box;
}

.boxInput {
  background-color: transparent;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  color: var(--text-colour-secondary);
  box-sizing: border-box;
  width: 25px;
  height: 25px;
  transition-duration: 0.2s;
  margin: 1%;
}

.textInput {
  background-color: transparent;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  color: var(--text-colour-primary);
  box-sizing: border-box;
  width: 50%;
  transition-duration: 0.2s;
  margin: 5px;
}

.boxSelect {
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  color: var(--text-colour-secondary);
  box-sizing: border-box;
  background-color: transparent;
  transition-duration: 0.2s;
}

.remove {
  padding: 0%;
  border-color: transparent;
  color: var(--back-colour-primary-2);
  background-color: transparent;
  transition-duration: 0.2s;
  font-weight: 700;
  font-size: x-large;
  text-align: center;
  vertical-align: middle;
}

.add {
  position: absolute;
  top: 5px;
  right: 10px;
  padding: 0%;
  margin: 0%;
  border-color: transparent;
  color: var(--text-colour-primary);
  background-color: transparent;
  transition-duration: 0.2s;
  font-weight: 700;
  font-size: x-large;
  text-align: center;
  vertical-align: middle;
}

.txtTransitionsWrapper, .txtStatesWrapper {
  position: relative;
  width: 300px;
  height: 50%;
  border-bottom: solid;
  border-left: solid;
  border-right: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  box-sizing: border-box;
  text-align: center;
  display: flex;
  flex-flow: column;
  background-color: var(--back-colour-primary-2);
}

.slideIn {
  animation: slideInAnimation;
  animation-duration: 0.7s;
}

.slideOut {
  animation: slideOutAnimation;
  animation-duration: 0.7s;
}

@keyframes slideInAnimation {
  0% {
    transform: translateX(-300px)
  }

  100% {
    transform: translateX(0%)
  }
}

@keyframes slideOutAnimation {
  0% {
    transform: translateX(0%)
  }

  100% {
    transform: translateX(-300px)
  }
}

.listWrapper {
  overflow: auto;
  flex: 1;
  border-top: solid;
  border-bottom: solid;
  border-color: var(--border-colour);
  border-width: 2px;
  background-color: var(--back-colour-primary-1);
}

.transition {
  border-radius: 25px;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  margin: 5px;
  height: 31px;
  opacity: 1;
  background-color: var(--back-colour-secondary);
  vertical-align: middle;
  transition: all 0.2s ease-in;
}

.txtState {
  border-radius: 25px;
  border-style: solid;
  border-width: 1px;
  border-color: transparent;
  margin: 5px;
  height: 31px;
  opacity: 1;
  background-color: var(--back-colour-secondary);
  vertical-align: middle;
  transition: all 0.2s ease-in;
}

@keyframes fadeIn {
  0% {
    transform: scaleY(0%);
    opacity: 0;
  }

  100% {
    transform: scaleY(100%);
    opacity: 1;
  }
}

@keyframes fadeOut {
  0% {
    transform: scaleY(100%);
    opacity: 1;
  }

  100% {
    transform: scaleY(0%);
    opacity: 0;
  }
}

.show {
  transform-origin: top;
  animation: fadeIn 0.2s
}

.hide {
  transform-origin: top;
  animation: fadeOut 0.2s
}

.highlighted {
  font-weight: 800;
  text-decoration: underline;
}

.simStateHistory {
  overflow: auto;
  white-space: nowrap;
}

.txtTransitionHeader, .txtStatesHeader {
  text-align: left;
  padding: 0;
  margin: 10px;
  font-weight: 700;
  font-size: larger;
  color: var(--text-colour-primary);
  background-color: var(--back-colour-primary-2);
}

.simLabel {
  color: var(--text-colour-primary);
  text-align: left;
  margin-left: 10px;
  font-weight: 700;
}

.fail {
  background-color: var(--failure-light);
}

.success {
  background-color: var(--success-light)
}

.pulse {
  animation-name: pulse-animation;
  animation-duration: 1.5s;
  transform-origin: center;
}

.pulseSuccess {
  animation-name: pulse-animation-success;
  animation-duration: 1.5s;
  transform-origin: center;
}

.pulseFailure {
  animation-name: pulse-animation-failure;
  animation-duration: 1.5s;
  transform-origin: center;
}

@keyframes pulse-animation {
  0% {
    stroke: var(--target);
    stroke-width: 5%;
    transform: scale(10%);
  }
  50% {
    stroke: rgba(0, 128, 128, 0);
    transform: scale(200%);
    stroke-width: 0%;
  }
  100% {
    stroke: rgba(255, 255, 255, 0);
    transform: scale(200%);
  }
}

@keyframes pulse-animation-success {
  0% {
    stroke: none;
    fill: var(--success);
    transform: scale(10%);
  }
  100% {
    stroke: none;
    fill: rgba(0, 160, 0, 0);
    transform: scale(200%);
  }
}

@keyframes pulse-animation-failure {
  0% {
    stroke: none;
    transform: scale(10%);
    fill: var(--failure);
  }
  100% {
    stroke: none;
    fill: rgba(160, 0, 0, 0);
    transform: scale(200%);
  }
}

#optionsInternalWrapper {
  background-color: var(--back-colour-primary-2);
  width: 300px;
  margin-right: 0px;
  transition-duration: 0.7s;
}

.optionsInternalWrapper.close {
  margin-right: -300px
}



.optionHeader {
  text-align: left;
  padding: 10px;
  margin: 0;
  font-weight: 700;
  font-size: larger;
  color: var(--text-colour-primary);
  background-color: var(--back-colour-primary-2);
  border: solid var(--border-colour) 2px;
  border-bottom: none;
  border-left: none;
}

.optionFooter {
  border-top: solid var(--border-colour) 2px;
  padding: 10px;
  margin: 0;
  background-color: var(--back-colour-primary-2);
}

.options {
  padding: 10px;
  background-color: var(--back-colour-primary-1);
  transition-duration: 0.7s;
  border-top: solid var(--border-colour) 2px;
}

.options * {
  color: var(--text-colour-primary);
  transition-duration: 0.7s;
  height: 40px;
  vertical-align: middle;

}

.options.close {
  padding: 0px 10px;
}

.options.close *  {
  height: 0px
}

.options.open {
  padding: 0px 10px;
}

.options.open *  {
  height: 40px
}

.optionsBoxInput {
  background-color: transparent;
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  color: var(--text-colour-primary);
  box-sizing: border-box;
  width: 25px;
  height: 25px;
  margin: 1%;
}

.optionsSelect {
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-colour);
  color: var(--text-colour-primary);
  box-sizing: border-box;
  background-color: transparent;
  margin: 1%;
}

.reset {
  margin: 1%;
  padding: 0%;
  border: solid var(--border-colour) 2px;
  background-color: var(--back-colour-primary-2);
  color: var(--text-colour-primary);
  width: 25px;
  height: 25px;
  transition-duration: 0.2s;
  font-weight: 600;
  font-size: medium;
  text-align: center;
  vertical-align: middle;
}

.slideLeft {
  animation: slideLeftAnimation;
  animation-duration: 0.7s;
}

.slideRight {
  animation: slideRightAnimation;
  animation-duration: 0.7s;
}

.slideDown {
  animation: slideDownAnimation;
  animation-duration: 0.7s;
}

.slideUp {
  animation: slideUpAnimation;
  animation-duration: 0.7s;
}

@keyframes slideLeftAnimation {
  0% {
    transform: translateX(300px)
  }

  100% {
    transform: translateX(0px)
  }
}

@keyframes slideRightAnimation {
  0% {
    transform: translateX(0px)
  }

  100% {
    transform: translateX(300px)
  }
}

@keyframes slideDownAnimation {
  0% {
    transform: translateY(-100%)
  }

  100% {
    transform: translateY(0%)
  }
}

@keyframes slideUpAnimation {
  0% {
    transform: translateY(0%)
  }

  100% {
    transform: translateY(-100%)
  }
}